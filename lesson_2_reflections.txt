What happens when you initialize a repository? Why do you need to do it?
    The folder in which I run the git init command becomes a git repsoitory.
    A hidden folder ".git" is created for keeping track of changes.
    Files are not tracked yet as no staging has been done.

How is the staging area different from the working directory and the repository? What value do you think it offers?
    Staging area provides the benefit of combining multiple files into a single commit.

How can you use the staging area to make sure you have one commit per logical change?
    By deciding which files need to be committed, I can stage them one by one and then do a single commit.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
    When trying new cocepts.
    When creating modified versions of the original

How do the diagrams help you visualize the branch structure?
    Helps plan commits and branches clearly.
    Helps organizing.
    Helps in communication with other team members.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
    We are able to combine changes done in separate branches into one.
    The diagram is a map of commits that are combined.  It is very useful to understand
        what commits are combined especially since the branches had a common commit.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
    Pros:  Can identify differences easily and address conflicts.
    Cons:  When changes are drastic and fundamental automatic merging may be slow and tedious.